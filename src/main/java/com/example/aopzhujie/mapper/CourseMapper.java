package com.example.aopzhujie.mapper;

import com.example.aopzhujie.dto.CourseListReq;
import com.example.aopzhujie.model.Course;
import org.apache.ibatis.annotations.*;
import org.springframework.stereotype.Component;

import java.util.List;

@Mapper
@Component("CourseMapper")
public interface CourseMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    @Delete({
        "delete from course",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    @Insert({
        "insert into course (id, name, ",
        "platform, status, ",
        "introduce, is_recommend, ",
        "gmt_create, gmt_modify, ",
        "cover_picture, remark, ",
        "creator, sort, price, ",
        "buying_price, study_person, ",
        "course_classify, teacher_picture, ",
        "banner_picture)",
        "values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, ",
        "#{platform,jdbcType=VARCHAR}, #{status,jdbcType=BIGINT}, ",
        "#{introduce,jdbcType=VARCHAR}, #{isRecommend,jdbcType=INTEGER}, ",
        "#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, ",
        "#{coverPicture,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, ",
        "#{creator,jdbcType=BIGINT}, #{sort,jdbcType=BIGINT}, #{price,jdbcType=DECIMAL}, ",
        "#{buyingPrice,jdbcType=DECIMAL}, #{studyPerson,jdbcType=INTEGER}, ",
        "#{courseClassify,jdbcType=BIGINT}, #{teacherPicture,jdbcType=VARCHAR}, ",
        "#{bannerPicture,jdbcType=VARCHAR})"
    })
    int insert(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    int insertSelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    /*@Select({
        "select",
        "id, name, platform, status, introduce, is_recommend, gmt_create, gmt_modify, ",
        "cover_picture, remark, creator, sort, price, buying_price, study_person, course_classify, ",
        "teacher_picture, banner_picture",
        "from course",
        "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("com.example.aopzhujie.mapper.CourseMapper.BaseResultMap")
    Course selectByPrimaryKey(Long id);*/

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    int updateByPrimaryKeySelective(Course record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table course
     *
     * @mbg.generated Thu Dec 17 14:08:57 CST 2020
     */
    @Update({
        "update course",
        "set name = #{name,jdbcType=VARCHAR},",
          "platform = #{platform,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=BIGINT},",
          "introduce = #{introduce,jdbcType=VARCHAR},",
          "is_recommend = #{isRecommend,jdbcType=INTEGER},",
          "gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},",
          "gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},",
          "cover_picture = #{coverPicture,jdbcType=VARCHAR},",
          "remark = #{remark,jdbcType=VARCHAR},",
          "creator = #{creator,jdbcType=BIGINT},",
          "sort = #{sort,jdbcType=BIGINT},",
          "price = #{price,jdbcType=DECIMAL},",
          "buying_price = #{buyingPrice,jdbcType=DECIMAL},",
          "study_person = #{studyPerson,jdbcType=INTEGER},",
          "course_classify = #{courseClassify,jdbcType=BIGINT},",
          "teacher_picture = #{teacherPicture,jdbcType=VARCHAR},",
          "banner_picture = #{bannerPicture,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Course record);

    List<Course> getCourseList(CourseListReq param);
}